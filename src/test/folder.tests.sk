namespace GLSLX.Tests {
  def testFolder {

# Constants must be present at compile-time
test("
const int global;

void main(int a, const int b) {
  const int x = a;
  const int y = b;
  const int z = global;
}
", "
<stdin>:4:17: error: This value must be a compile-time constant
  const int x = a;
                ^
<stdin>:5:17: error: This value must be a compile-time constant
  const int y = b;
                ^
")

# Test constant expressions for primitives
test("
void main() {
  int cast1[int(-1)];
  int cast2[int(-1.0)];
  int cast3[int(false)];

  int hook1[true ? 1 : 0];
  int hook2[false ? 1 : 0];

  int negative[-1];
  int positive[+1];
  int not1[int(!true)];
  int not2[int(!false)];

  int add[1 + -2];
  int subtract[1 - 2];
  int multiply[2 * -3];
  int divide[7 / -3];

  int equal1[int(1 == 1)];
  int equal2[int(1 == 2)];
  int equal3[int(1 != 1)];
  int equal4[int(1 != 2)];
}
", "
<stdin>:2:13: error: Cannot declare an array with a size of \"-1\"
  int cast1[int(-1)];
            ~~~~~~~
<stdin>:3:13: error: Cannot declare an array with a size of \"-1\"
  int cast2[int(-1.0)];
            ~~~~~~~~~
<stdin>:4:13: error: Cannot declare an array with a size of \"0\"
  int cast3[int(false)];
            ~~~~~~~~~~
<stdin>:7:13: error: Cannot declare an array with a size of \"0\"
  int hook2[false ? 1 : 0];
            ~~~~~~~~~~~~~
<stdin>:9:16: error: Cannot declare an array with a size of \"-1\"
  int negative[-1];
               ~~
<stdin>:11:12: error: Cannot declare an array with a size of \"0\"
  int not1[int(!true)];
           ~~~~~~~~~~
<stdin>:14:11: error: Cannot declare an array with a size of \"-1\"
  int add[1 + -2];
          ~~~~~~
<stdin>:15:16: error: Cannot declare an array with a size of \"-1\"
  int subtract[1 - 2];
               ~~~~~
<stdin>:16:16: error: Cannot declare an array with a size of \"-6\"
  int multiply[2 * -3];
               ~~~~~~
<stdin>:17:14: error: Cannot declare an array with a size of \"-2\"
  int divide[7 / -3];
             ~~~~~~
<stdin>:20:14: error: Cannot declare an array with a size of \"0\"
  int equal2[int(1 == 2)];
             ~~~~~~~~~~~
<stdin>:21:14: error: Cannot declare an array with a size of \"0\"
  int equal3[int(1 != 1)];
             ~~~~~~~~~~~
")

# Make sure primitive constructors work with extra values inside constant expressions
test("
void main() {
  int v2[int(vec2(false))];
  int m3[int(mat3(false))];
}
", "
<stdin>:2:10: error: Cannot declare an array with a size of \"0\"
  int v2[int(vec2(false))];
         ~~~~~~~~~~~~~~~~
<stdin>:3:10: error: Cannot declare an array with a size of \"0\"
  int m3[int(mat3(false))];
         ~~~~~~~~~~~~~~~~
")

# Test constant expressions for logical operators
test("
void main() {
  int and1[int(false && false)];
  int and2[int(true && false)];
  int and3[int(false && true)];
  int and4[int(true && true)];

  int or1[int(false || false)];
  int or2[int(true || false)];
  int or3[int(false || true)];
  int or4[int(true || true)];

  int xor1[int(false ^^ false)];
  int xor2[int(true ^^ false)];
  int xor3[int(false ^^ true)];
  int xor4[int(true ^^ true)];
}
", "
<stdin>:2:12: error: Cannot declare an array with a size of \"0\"
  int and1[int(false && false)];
           ~~~~~~~~~~~~~~~~~~~
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int and2[int(true && false)];
           ~~~~~~~~~~~~~~~~~~
<stdin>:4:12: error: Cannot declare an array with a size of \"0\"
  int and3[int(false && true)];
           ~~~~~~~~~~~~~~~~~~
<stdin>:7:11: error: Cannot declare an array with a size of \"0\"
  int or1[int(false || false)];
          ~~~~~~~~~~~~~~~~~~~
<stdin>:12:12: error: Cannot declare an array with a size of \"0\"
  int xor1[int(false ^^ false)];
           ~~~~~~~~~~~~~~~~~~~
<stdin>:15:12: error: Cannot declare an array with a size of \"0\"
  int xor4[int(true ^^ true)];
           ~~~~~~~~~~~~~~~~~
")

# Test constant expressions for comparison operators
test("
void main() {
  int int1[int(1 < 2)];
  int int2[int(1 > 2)];
  int int3[int(1 <= 2)];
  int int4[int(1 >= 2)];

  int double1[int(1.0 < 1.1)];
  int double2[int(1.0 > 1.1)];
  int double3[int(1.0 <= 1.1)];
  int double4[int(1.0 >= 1.1)];
}
", "
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int int2[int(1 > 2)];
           ~~~~~~~~~~
<stdin>:5:12: error: Cannot declare an array with a size of \"0\"
  int int4[int(1 >= 2)];
           ~~~~~~~~~~~
<stdin>:8:15: error: Cannot declare an array with a size of \"0\"
  int double2[int(1.0 > 1.1)];
              ~~~~~~~~~~~~~~
<stdin>:10:15: error: Cannot declare an array with a size of \"0\"
  int double4[int(1.0 >= 1.1)];
              ~~~~~~~~~~~~~~~
")

# Test constant expressions for vectors
test("
void main() {
  int equal1[int(ivec2(1, 2) == ivec2(1, 2))];
  int equal2[int(ivec2(1, 2) == ivec2(2, 1))];
  int equal3[int(ivec2(1, 2) != ivec2(1, 2))];
  int equal4[int(ivec2(1, 2) != ivec2(2, 1))];

  int index1[ivec2(1, -1)[1]];
  int index2[ivec2(1, -1)[-1]];

  int swizzle1[ivec2(1, -1).y];
  int swizzle2[ivec2(1, -1).z];
  int swizzle3[int(ivec2(1, -1).yx == ivec2(-1, 1))];
  int swizzle4[int(ivec2(1, -1).yx != ivec2(-1, 1))];
}
", "
<stdin>:3:14: error: Cannot declare an array with a size of \"0\"
  int equal2[int(ivec2(1, 2) == ivec2(2, 1))];
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:4:14: error: Cannot declare an array with a size of \"0\"
  int equal3[int(ivec2(1, 2) != ivec2(1, 2))];
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:7:14: error: Cannot declare an array with a size of \"-1\"
  int index1[ivec2(1, -1)[1]];
             ~~~~~~~~~~~~~~~
<stdin>:8:27: error: Index \"-1\" is out of bounds for type \"ivec2\"
  int index2[ivec2(1, -1)[-1]];
                          ~~
<stdin>:8:14: error: This value must be a compile-time constant
  int index2[ivec2(1, -1)[-1]];
             ~~~~~~~~~~~~~~~~
<stdin>:10:16: error: Cannot declare an array with a size of \"-1\"
  int swizzle1[ivec2(1, -1).y];
               ~~~~~~~~~~~~~~
<stdin>:11:29: error: Invalid swizzle \"z\" on type \"ivec2\"
  int swizzle2[ivec2(1, -1).z];
                            ^
<stdin>:13:16: error: Cannot declare an array with a size of \"0\"
  int swizzle4[int(ivec2(1, -1).yx != ivec2(-1, 1))];
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Make sure casts inside vector and matrix constructors work in constant expressions
test("
void main() {
  int iv2b[ivec2(false).x];
  int iv2i[ivec2(-1).x];
  int iv2f[ivec2(-1.0).x];

  int bv2b[int(bvec2(false).x)];
  int bv2i[int(bvec2(-1).x)];
  int bv2f[int(bvec2(-1.0).x)];

  int v2b[int(vec2(false).x)];
  int v2i[int(vec2(-1).x)];
  int v2f[int(vec2(-1.0).x)];

  int m2b[int(mat2(false)[0] != vec2(0.0))];
  int m2i[int(mat2(-1, -1, -1, -1)[0] != vec2(-1.0))];
  int m2f[int(mat2(-1.0, -1.0, -1.0, -1.0)[0] != vec2(-1.0))];

  int m2bx[int(mat2(false)[0].x)];
  int m2ix[int(mat2(-1)[0].x)];
  int m2fx[int(mat2(-1.0)[0].x)];
}
", "
<stdin>:2:12: error: Cannot declare an array with a size of \"0\"
  int iv2b[ivec2(false).x];
           ~~~~~~~~~~~~~~
<stdin>:3:12: error: Cannot declare an array with a size of \"-1\"
  int iv2i[ivec2(-1).x];
           ~~~~~~~~~~~
<stdin>:4:12: error: Cannot declare an array with a size of \"-1\"
  int iv2f[ivec2(-1.0).x];
           ~~~~~~~~~~~~~
<stdin>:6:12: error: Cannot declare an array with a size of \"0\"
  int bv2b[int(bvec2(false).x)];
           ~~~~~~~~~~~~~~~~~~~
<stdin>:10:11: error: Cannot declare an array with a size of \"0\"
  int v2b[int(vec2(false).x)];
          ~~~~~~~~~~~~~~~~~~
<stdin>:11:11: error: Cannot declare an array with a size of \"-1\"
  int v2i[int(vec2(-1).x)];
          ~~~~~~~~~~~~~~~
<stdin>:12:11: error: Cannot declare an array with a size of \"-1\"
  int v2f[int(vec2(-1.0).x)];
          ~~~~~~~~~~~~~~~~~
<stdin>:14:11: error: Cannot declare an array with a size of \"0\"
  int m2b[int(mat2(false)[0] != vec2(0.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:15:11: error: Cannot declare an array with a size of \"0\"
  int m2i[int(mat2(-1, -1, -1, -1)[0] != vec2(-1.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:16:11: error: Cannot declare an array with a size of \"0\"
  int m2f[int(mat2(-1.0, -1.0, -1.0, -1.0)[0] != vec2(-1.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:18:12: error: Cannot declare an array with a size of \"0\"
  int m2bx[int(mat2(false)[0].x)];
           ~~~~~~~~~~~~~~~~~~~~~
<stdin>:19:12: error: Cannot declare an array with a size of \"-1\"
  int m2ix[int(mat2(-1)[0].x)];
           ~~~~~~~~~~~~~~~~~~
<stdin>:20:12: error: Cannot declare an array with a size of \"-1\"
  int m2fx[int(mat2(-1.0)[0].x)];
           ~~~~~~~~~~~~~~~~~~~~
")

# Check matrix constructor layout
test("
void main() {
  int m21[int(mat2(1) == mat2(1, 0, 0, 1))];
  int m22[int(mat2(1) != mat2(1, 0, 0, 1))];
  int m23[int(mat2(vec2(1, 2), vec2(3, 4)) == mat2(1, 2, 3, 4))];
  int m24[int(mat2(vec2(1, 2), vec2(3, 4)) != mat2(1, 2, 3, 4))];

  int m31[int(mat3(1) == mat3(1, 0, 0, 0, 1, 0, 0, 0, 1))];
  int m32[int(mat3(1) != mat3(1, 0, 0, 0, 1, 0, 0, 0, 1))];
  int m33[int(mat3(vec3(1, 2, 3), vec3(4, 5, 6), vec3(7, 8, 9)) == mat3(1, 2, 3, 4, 5, 6, 7, 8, 9))];
  int m34[int(mat3(vec3(1, 2, 3), vec3(4, 5, 6), vec3(7, 8, 9)) != mat3(1, 2, 3, 4, 5, 6, 7, 8, 9))];

  int m41[int(mat4(1) == mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))];
  int m42[int(mat4(1) != mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))];
  int m43[int(mat4(vec4(1, 2, 3, 4), vec4(5, 6, 7, 8), vec4(9, 10, 11, 12), vec4(13, 14, 15, 16)) == mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))];
  int m44[int(mat4(vec4(1, 2, 3, 4), vec4(5, 6, 7, 8), vec4(9, 10, 11, 12), vec4(13, 14, 15, 16)) != mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))];

  int m3m21[int(mat3(mat2(1, 2, 3, 4)) == mat3(1, 2, 0, 3, 4, 0, 0, 0, 1))];
  int m3m22[int(mat3(mat2(1, 2, 3, 4)) != mat3(1, 2, 0, 3, 4, 0, 0, 0, 1))];

  int m4m21[int(mat4(mat2(1, 2, 3, 4)) == mat4(1, 2, 0, 0, 3, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))];
  int m4m22[int(mat4(mat2(1, 2, 3, 4)) != mat4(1, 2, 0, 0, 3, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))];

  int m4m31[int(mat4(mat3(1, 2, 3, 4, 5, 6, 7, 8, 9)) == mat4(1, 2, 3, 0, 4, 5, 6, 0, 7, 8, 9, 0, 0, 0, 0, 1))];
  int m4m32[int(mat4(mat3(1, 2, 3, 4, 5, 6, 7, 8, 9)) != mat4(1, 2, 3, 0, 4, 5, 6, 0, 7, 8, 9, 0, 0, 0, 0, 1))];

  int m2m31[int(mat2(mat3(1, 2, 3, 4, 5, 6, 7, 8, 9)) == mat2(1, 2, 4, 5))];
  int m2m32[int(mat2(mat3(1, 2, 3, 4, 5, 6, 7, 8, 9)) != mat2(1, 2, 4, 5))];

  int m2m41[int(mat2(mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) == mat2(1, 2, 5, 6))];
  int m2m42[int(mat2(mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) != mat2(1, 2, 5, 6))];

  int m3m41[int(mat3(mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) == mat3(1, 2, 3, 5, 6, 7, 9, 10, 11))];
  int m3m42[int(mat3(mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) != mat3(1, 2, 3, 5, 6, 7, 9, 10, 11))];
}
", "
<stdin>:3:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(mat2(1) != mat2(1, 0, 0, 1))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:5:11: error: Cannot declare an array with a size of \"0\"
  int m24[int(mat2(vec2(1, 2), vec2(3, 4)) != mat2(1, 2, 3, 4))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:8:11: error: Cannot declare an array with a size of \"0\"
  int m32[int(mat3(1) != mat3(1, 0, 0, 0, 1, 0, 0, 0, 1))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:10:11: error: Cannot declare an array with a size of \"0\"
  int m34[int(mat3(vec3(1, 2, 3), vec3(4, 5, 6), vec3(7, 8, 9)) != mat3(1, 2, 3, 4, 5, 6, 7, 8, 9))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:13:11: error: Cannot declare an array with a size of \"0\"
  int m42[int(mat4(1) != mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:15:11: error: Cannot declare an array with a size of \"0\"
  int m44[int(mat4(vec4(1, 2, 3, 4), vec4(5, 6, 7, 8), vec4(9, 10, 11, 12), vec4(13, 14, 15, 16)) != mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:18:13: error: Cannot declare an array with a size of \"0\"
  int m3m22[int(mat3(mat2(1, 2, 3, 4)) != mat3(1, 2, 0, 3, 4, 0, 0, 0, 1))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:21:13: error: Cannot declare an array with a size of \"0\"
  int m4m22[int(mat4(mat2(1, 2, 3, 4)) != mat4(1, 2, 0, 0, 3, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:24:13: error: Cannot declare an array with a size of \"0\"
  int m4m32[int(mat4(mat3(1, 2, 3, 4, 5, 6, 7, 8, 9)) != mat4(1, 2, 3, 0, 4, 5, 6, 0, 7, 8, 9, 0, 0, 0, 0, 1))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:27:13: error: Cannot declare an array with a size of \"0\"
  int m2m32[int(mat2(mat3(1, 2, 3, 4, 5, 6, 7, 8, 9)) != mat2(1, 2, 4, 5))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:30:13: error: Cannot declare an array with a size of \"0\"
  int m2m42[int(mat2(mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) != mat2(1, 2, 5, 6))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:33:13: error: Cannot declare an array with a size of \"0\"
  int m3m42[int(mat3(mat4(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) != mat3(1, 2, 3, 5, 6, 7, 9, 10, 11))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Compound constant vector expression tests
test("
void main() {
  int equal1[int(ivec4(ivec2(1, 2), ivec2(3, 4)) == ivec4(1, 2, 3, 4))];
  int equal2[int(ivec4(ivec3(1, 2, 3), 4) == ivec4(1, 2, 3, 4))];
  int equal3[int(ivec4(1, ivec3(2, 3, 4)) == ivec4(1, 2, 3, 4))];
  int equal4[int(ivec4(ivec4(ivec4(1, 2, 3, 4))) == ivec4(1, 2, 3, 4))];

  int notEquals1[int(ivec4(ivec2(1, 2), ivec2(3, 4)) != ivec4(1, 2, 3, 4))];
  int notEquals2[int(ivec4(ivec3(1, 2, 3), 4) != ivec4(1, 2, 3, 4))];
  int notEquals3[int(ivec4(1, ivec3(2, 3, 4)) != ivec4(1, 2, 3, 4))];
  int notEquals4[int(ivec4(ivec4(ivec4(1, 2, 3, 4))) != ivec4(1, 2, 3, 4))];

  int extra1[int(ivec2(ivec3(1, 2, 3)) == ivec2(1, 2))];
  int extra2[int(ivec2(ivec3(1, 2, 3)) != ivec2(1, 2))];
}
", "
<stdin>:7:18: error: Cannot declare an array with a size of \"0\"
  int notEquals1[int(ivec4(ivec2(1, 2), ivec2(3, 4)) != ivec4(1, 2, 3, 4))];
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:8:18: error: Cannot declare an array with a size of \"0\"
  int notEquals2[int(ivec4(ivec3(1, 2, 3), 4) != ivec4(1, 2, 3, 4))];
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:18: error: Cannot declare an array with a size of \"0\"
  int notEquals3[int(ivec4(1, ivec3(2, 3, 4)) != ivec4(1, 2, 3, 4))];
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:10:18: error: Cannot declare an array with a size of \"0\"
  int notEquals4[int(ivec4(ivec4(ivec4(1, 2, 3, 4))) != ivec4(1, 2, 3, 4))];
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:13:14: error: Cannot declare an array with a size of \"0\"
  int extra2[int(ivec2(ivec3(1, 2, 3)) != ivec2(1, 2))];
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check unary no-op of compound constant expressions
test("
void main() {
  int iv21[int(+ivec2(1, 2) == ivec2(1, 2))];
  int iv22[int(+ivec2(1, 2) != ivec2(1, 2))];
  int iv23[int(+ivec2(1, 2) == ivec2(2, 3))];
  int iv24[int(+ivec2(1, 2) != ivec2(2, 3))];

  int v21[int(+vec2(1.0, 2.0) == vec2(1.0, 2.0))];
  int v22[int(+vec2(1.0, 2.0) != vec2(1.0, 2.0))];
  int v23[int(+vec2(1.0, 2.0) == vec2(2.0, 3.0))];
  int v24[int(+vec2(1.0, 2.0) != vec2(2.0, 3.0))];

  int m21[int(+mat2(1.0, 2.0, 3.0, 4.0) == mat2(1.0, 2.0, 3.0, 4.0))];
  int m22[int(+mat2(1.0, 2.0, 3.0, 4.0) != mat2(1.0, 2.0, 3.0, 4.0))];
  int m23[int(+mat2(1.0, 2.0, 3.0, 4.0) == mat2(2.0, 3.0, 4.0, 5.0))];
  int m24[int(+mat2(1.0, 2.0, 3.0, 4.0) != mat2(2.0, 3.0, 4.0, 5.0))];
}
", "
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int iv22[int(+ivec2(1, 2) != ivec2(1, 2))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:4:12: error: Cannot declare an array with a size of \"0\"
  int iv23[int(+ivec2(1, 2) == ivec2(2, 3))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:8:11: error: Cannot declare an array with a size of \"0\"
  int v22[int(+vec2(1.0, 2.0) != vec2(1.0, 2.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:11: error: Cannot declare an array with a size of \"0\"
  int v23[int(+vec2(1.0, 2.0) == vec2(2.0, 3.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:13:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(+mat2(1.0, 2.0, 3.0, 4.0) != mat2(1.0, 2.0, 3.0, 4.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:14:11: error: Cannot declare an array with a size of \"0\"
  int m23[int(+mat2(1.0, 2.0, 3.0, 4.0) == mat2(2.0, 3.0, 4.0, 5.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check unary negation of compound constant expressions
test("
void main() {
  int iv21[int(-ivec2(1, 2) == ivec2(-1, -2))];
  int iv22[int(-ivec2(1, 2) != ivec2(-1, -2))];
  int iv23[int(-ivec2(1, 2) == ivec2(-2, -3))];
  int iv24[int(-ivec2(1, 2) != ivec2(-2, -3))];

  int v21[int(-vec2(1.0, 2.0) == vec2(-1.0, -2.0))];
  int v22[int(-vec2(1.0, 2.0) != vec2(-1.0, -2.0))];
  int v23[int(-vec2(1.0, 2.0) == vec2(-2.0, -3.0))];
  int v24[int(-vec2(1.0, 2.0) != vec2(-2.0, -3.0))];

  int m21[int(-mat2(1.0, 2.0, 3.0, 4.0) == mat2(-1.0, -2.0, -3.0, -4.0))];
  int m22[int(-mat2(1.0, 2.0, 3.0, 4.0) != mat2(-1.0, -2.0, -3.0, -4.0))];
  int m23[int(-mat2(1.0, 2.0, 3.0, 4.0) == mat2(-2.0, -3.0, -4.0, -5.0))];
  int m24[int(-mat2(1.0, 2.0, 3.0, 4.0) != mat2(-2.0, -3.0, -4.0, -5.0))];
}
", "
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int iv22[int(-ivec2(1, 2) != ivec2(-1, -2))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:4:12: error: Cannot declare an array with a size of \"0\"
  int iv23[int(-ivec2(1, 2) == ivec2(-2, -3))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:8:11: error: Cannot declare an array with a size of \"0\"
  int v22[int(-vec2(1.0, 2.0) != vec2(-1.0, -2.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:11: error: Cannot declare an array with a size of \"0\"
  int v23[int(-vec2(1.0, 2.0) == vec2(-2.0, -3.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:13:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(-mat2(1.0, 2.0, 3.0, 4.0) != mat2(-1.0, -2.0, -3.0, -4.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:14:11: error: Cannot declare an array with a size of \"0\"
  int m23[int(-mat2(1.0, 2.0, 3.0, 4.0) == mat2(-2.0, -3.0, -4.0, -5.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check component-wise addition of constant expressions
test("
void main() {
  int iv21[int(ivec2(1, 2) + ivec2(3, 4) == ivec2(4, 6))];
  int iv22[int(ivec2(1, 2) + ivec2(3, 4) != ivec2(4, 6))];

  int iv2i1[int(ivec2(1, 2) + 3 == ivec2(4, 5))];
  int iv2i2[int(ivec2(1, 2) + 3 != ivec2(4, 5))];

  int v21[int(vec2(1.0, 2.0) + vec2(3.0, 4.0) == vec2(4.0, 6.0))];
  int v22[int(vec2(1.0, 2.0) + vec2(3.0, 4.0) != vec2(4.0, 6.0))];

  int fv21[int(1.0 + vec2(2, 3) == vec2(3, 4))];
  int fv22[int(1.0 + vec2(2, 3) != vec2(3, 4))];

  int m21[int(mat2(1.0, 2.0, 3.0, 4.0) + mat2(5.0, 6.0, 7.0, 8.0) == mat2(6.0, 8.0, 10.0, 12.0))];
  int m22[int(mat2(1.0, 2.0, 3.0, 4.0) + mat2(5.0, 6.0, 7.0, 8.0) != mat2(6.0, 8.0, 10.0, 12.0))];
}
", "
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int iv22[int(ivec2(1, 2) + ivec2(3, 4) != ivec2(4, 6))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:6:13: error: Cannot declare an array with a size of \"0\"
  int iv2i2[int(ivec2(1, 2) + 3 != ivec2(4, 5))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:11: error: Cannot declare an array with a size of \"0\"
  int v22[int(vec2(1.0, 2.0) + vec2(3.0, 4.0) != vec2(4.0, 6.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:12:12: error: Cannot declare an array with a size of \"0\"
  int fv22[int(1.0 + vec2(2, 3) != vec2(3, 4))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:15:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(mat2(1.0, 2.0, 3.0, 4.0) + mat2(5.0, 6.0, 7.0, 8.0) != mat2(6.0, 8.0, 10.0, 12.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check component-wise addition of constant expressions
test("
void main() {
  int iv21[int(ivec2(1, 2) - ivec2(4, 3) == ivec2(-3, -1))];
  int iv22[int(ivec2(1, 2) - ivec2(4, 3) != ivec2(-3, -1))];

  int iv2i1[int(ivec2(1, 2) - 3 == ivec2(-2, -1))];
  int iv2i2[int(ivec2(1, 2) - 3 != ivec2(-2, -1))];

  int v21[int(vec2(1.0, 2.0) - vec2(4.0, 3.0) == vec2(-3.0, -1.0))];
  int v22[int(vec2(1.0, 2.0) - vec2(4.0, 3.0) != vec2(-3.0, -1.0))];

  int fv21[int(1.0 - vec2(2, 3) == vec2(-1, -2))];
  int fv22[int(1.0 - vec2(2, 3) != vec2(-1, -2))];

  int m21[int(mat2(1.0, 2.0, 3.0, 4.0) - mat2(8.0, 7.0, 6.0, 5.0) == mat2(-7.0, -5.0, -3.0, -1.0))];
  int m22[int(mat2(1.0, 2.0, 3.0, 4.0) - mat2(8.0, 7.0, 6.0, 5.0) != mat2(-7.0, -5.0, -3.0, -1.0))];
}
", "
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int iv22[int(ivec2(1, 2) - ivec2(4, 3) != ivec2(-3, -1))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:6:13: error: Cannot declare an array with a size of \"0\"
  int iv2i2[int(ivec2(1, 2) - 3 != ivec2(-2, -1))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:11: error: Cannot declare an array with a size of \"0\"
  int v22[int(vec2(1.0, 2.0) - vec2(4.0, 3.0) != vec2(-3.0, -1.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:12:12: error: Cannot declare an array with a size of \"0\"
  int fv22[int(1.0 - vec2(2, 3) != vec2(-1, -2))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:15:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(mat2(1.0, 2.0, 3.0, 4.0) - mat2(8.0, 7.0, 6.0, 5.0) != mat2(-7.0, -5.0, -3.0, -1.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check component-wise multiplication of constant expressions
test("
void main() {
  int v21[int(vec2(1, 2) * vec2(3, -4) == vec2(3, -8))];
  int v22[int(vec2(1, 2) * vec2(3, -4) != vec2(3, -8))];

  int v2f1[int(vec2(1, 2) * 3.0 == vec2(3, 6))];
  int v2f2[int(vec2(1, 2) * 3.0 != vec2(3, 6))];

  int fv21[int(-3.0 * mat2(1, -2, 3, -4) == mat2(-3, 6, -9, 12))];
  int fv22[int(-3.0 * mat2(1, -2, 3, -4) != mat2(-3, 6, -9, 12))];

  // Matrix-vector multiply
  int m2v21[int(mat2(1, 2, 3, 4) * vec2(5, 6) == vec2(23, 34))];
  int m2v22[int(mat2(1, 2, 3, 4) * vec2(5, 6) != vec2(23, 34))];

  // Vector-matrix multiply
  int v2m21[int(vec2(1, 2) * mat2(3, 4, 5, 6) == vec2(11, 17))];
  int v2m22[int(vec2(1, 2) * mat2(3, 4, 5, 6) != vec2(11, 17))];

  // Matrix-matrix multiply
  int m21[int(mat2(1, 2, 3, 4) * mat2(5, 6, 7, 8) == mat2(23, 34, 31, 46))];
  int m22[int(mat2(1, 2, 3, 4) * mat2(5, 6, 7, 8) != mat2(23, 34, 31, 46))];
}
", "
<stdin>:3:11: error: Cannot declare an array with a size of \"0\"
  int v22[int(vec2(1, 2) * vec2(3, -4) != vec2(3, -8))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:6:12: error: Cannot declare an array with a size of \"0\"
  int v2f2[int(vec2(1, 2) * 3.0 != vec2(3, 6))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:12: error: Cannot declare an array with a size of \"0\"
  int fv22[int(-3.0 * mat2(1, -2, 3, -4) != mat2(-3, 6, -9, 12))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:13:13: error: Cannot declare an array with a size of \"0\"
  int m2v22[int(mat2(1, 2, 3, 4) * vec2(5, 6) != vec2(23, 34))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:17:13: error: Cannot declare an array with a size of \"0\"
  int v2m22[int(vec2(1, 2) * mat2(3, 4, 5, 6) != vec2(11, 17))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:21:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(mat2(1, 2, 3, 4) * mat2(5, 6, 7, 8) != mat2(23, 34, 31, 46))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check component-wise division of constant expressions
test("
void main() {
  int iv21[int(ivec2(7, 10) / ivec2(2, 3) == ivec2(3, 3))];
  int iv22[int(ivec2(7, 10) / ivec2(2, 3) != ivec2(3, 3))];

  int iv2i1[int(ivec2(7, 10) / 3 == ivec2(2, 3))];
  int iv2i2[int(ivec2(7, 10) / 3 != ivec2(2, 3))];

  int iiv21[int(11 / ivec2(3, 5) == ivec2(3, 2))];
  int iiv22[int(11 / ivec2(3, 5) != ivec2(3, 2))];

  int iv23[int(ivec2(-7, 10) / ivec2(2, -3) == ivec2(-3, -3))];
  int iv24[int(ivec2(-7, 10) / ivec2(2, -3) != ivec2(-3, -3))];

  int m21[int(mat2(1, -2, 3, 4) / mat2(5, 4, 2, -1) == mat2(0.2, -0.5, 1.5, -4.0))];
  int m22[int(mat2(1, -2, 3, 4) / mat2(5, 4, 2, -1) != mat2(0.2, -0.5, 1.5, -4.0))];
}
", "
<stdin>:3:12: error: Cannot declare an array with a size of \"0\"
  int iv22[int(ivec2(7, 10) / ivec2(2, 3) != ivec2(3, 3))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:6:13: error: Cannot declare an array with a size of \"0\"
  int iv2i2[int(ivec2(7, 10) / 3 != ivec2(2, 3))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:13: error: Cannot declare an array with a size of \"0\"
  int iiv22[int(11 / ivec2(3, 5) != ivec2(3, 2))];
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:12:12: error: Cannot declare an array with a size of \"0\"
  int iv24[int(ivec2(-7, 10) / ivec2(2, -3) != ivec2(-3, -3))];
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:15:11: error: Cannot declare an array with a size of \"0\"
  int m22[int(mat2(1, -2, 3, 4) / mat2(5, 4, 2, -1) != mat2(0.2, -0.5, 1.5, -4.0))];
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
")

# Check constant struct expressions
test("
struct S {
  int i;
  float f;
};

void main() {
  int equal1[int(S(1, 2.0) == S(1, 2.0))];
  int equal2[int(S(1, 2.0) != S(1, 2.0))];
  int equal3[int(S(1, 2.0) == S(3, 4.0))];
  int equal4[int(S(1, 2.0) != S(3, 4.0))];

  int field1[int(S(1, 2.0).f == 2.0)];
  int field2[int(S(1, 2.0).f != 2.0)];
  int field3[int(S(1, 2.0).f == 3.0)];
  int field4[int(S(1, 2.0).f != 3.0)];
}
", "
<stdin>:8:14: error: Cannot declare an array with a size of \"0\"
  int equal2[int(S(1, 2.0) != S(1, 2.0))];
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:9:14: error: Cannot declare an array with a size of \"0\"
  int equal3[int(S(1, 2.0) == S(3, 4.0))];
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:13:14: error: Cannot declare an array with a size of \"0\"
  int field2[int(S(1, 2.0).f != 2.0)];
             ~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:14:14: error: Cannot declare an array with a size of \"0\"
  int field3[int(S(1, 2.0).f == 3.0)];
             ~~~~~~~~~~~~~~~~~~~~~~~
")

  }
}
